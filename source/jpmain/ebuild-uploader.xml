<?xml version='1.0' encoding="UTF-8"?>
<?xml-stylesheet href="/xsl/guide.xsl" type="text/xsl"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide link="/jpmain/ebuild-uploader.xml">
<title>ebuild-uploader利用ガイド</title>
<author title="Author">
<mail link="www@gentoo.gr.jp">GentooJP</mail>
</author>
<author title="Editor">
<mail link="atzm@gentoo.gr.jp">渡邊 集</mail>
</author>

<abstract>
この文書では、GentooJPで運営しているebuild-uploaderの使い方を説明します。
</abstract>

<license/>

<version>0.6</version>
<date>27 August 2006</date>

<chapter>
<title>ebuild-uploaderって？</title>
<section>
<title>ebuild-uploaderについて</title>
<body>
<p>
<uri link="http://ebuild.gentoo.gr.jp/">ebuild-uploader</uri>
は、GentooJPで独自に開発した簡易ebuild登録システムです。
ebuildの登録を容易に行うことができ、laymanやgensyncコマンドを用いることによって
emerge syncと同じ感覚でツリーの取得を行うことができるので、
テストもとても簡単になっています。
もちろん、emerge-webrsyncのような感覚でツリーの取得を行うことも可能です。
自分で作ったebuildをみんなにテストしてもらいたい、
本家Portageツリーに入れて欲しいけど英語で登録するのは難しい、
誰かの作ったebuildのテストをしてみたい、
というようなときに必ず役に立つはずです。
</p>

<p>
また、登録されたebuildはテスト期間を経て、
本家Portageツリーにコミットしても問題ないだろうという状態になったとき、
GentooJPの開発者は本家の開発者に連絡を取って本家ツリーに入れてもらえるように計らいます。
すべてのebuildが本家ツリーにコミットされるとは限りませんが、
Bugzillaは分かりにくい、英語が苦手だというあなたが作ったebuildが本家ツリーに登録されるための、
もっとも手軽な方法と言えるでしょう。
どんなアプリケーションのebuildでも、遠慮せずにどんどん登録して下さい！
</p>

<impo>
本家ツリーにあるebuildを改良したといったようなebuildの場合は、充分にテストを行った上で、
~x86として(x86用であれば)登録を行うようにして下さい。
登録されたebuildは利用者がOVERLAYすることになりますので、
パッケージアップデートの対象になってしまう可能性が充分にあるからです。
</impo>

</body>
</section>

<section>
<title>ebuild-uploaderの機能</title>
<body>
<p>
ebuild-uploaderの機能を簡単に挙げると、以下のようになります。
</p>
<ul>
<li>ebuildを簡単に日本語で登録することができます。</li>
<li>登録された各ebuildごとにコメントをつけることのできる掲示板機能があり、
ebuildにバグが発見された場合などにはこの機能を使って簡単に報告することができます。</li>
<li>コメント文を考えている時間のないお忙しいあなたのために、
動作したかどうかをクリック一回で報告することのできる投票機能があります。</li>
<li>登録されたebuildはすべて個々に閲覧とダウンロードを行うことができます。</li>
<li>gentoolkit-devに含まれるgensyncコマンドを用いることによって、
rsyncサーバを使ったツリーの取得を行うことができます。</li>
<li>ファイアウォール等の制限のためrsyncを使えない方向けに、
Webを介してツリーの取得を行う方法も提供されています。</li>
</ul>
</body>
</section>
</chapter>

<chapter>
<title>ebuild-uploaderを利用したアップロード</title>
<section>
<body>
<p>
それでは実際にebuild-uploaderを使ってebuildの登録をしてみましょう。
</p>
<p>
<uri link="http://ebuild.gentoo.gr.jp/">ebuildJP</uri>
を訪れると、
左側には登録されているカテゴリ毎のebuild一覧、
右側のヘッダ部にナビゲーションのためのリンク、
その下には最近アクションのあったアプリケーションが並んでいるはずです。
</p>
</body>
</section>

<section>
<title>ebuildを新規登録する</title>
<body>
<p>
ebuildを新規登録する場合、ナビゲーションのところにある<i>アップロード</i>というリンクをクリックして下さい。
アップロードのためのフォームが現れます。
</p>

<table>
<tr>
<th>ユーザ名(必須)</th><ti>自分の名前を記述します。</ti>
</tr>
<tr>
<th>パスワード(必須)</th><ti>登録したファイルを編集する際に必要となります。</ti>
</tr>
<tr>
<th>メールアドレス(必須)</th><ti>自分のメールアドレスを記述します。メールアドレスはGentooJPのメンバー以外には公開されません。
メールアドレスは、例えば登録されたebuildを本家に持っていくようなことになった場合、
その際ebuildの登録者に連絡を取らなければならないことがあるため必須項目となっています。</ti>
</tr>
<tr>
<th>カテゴリー(必須)</th><ti>これからアップロードしようとしているebuildがどのカテゴリに属するものなのかを選択して下さい。</ti>
</tr>
<tr>
<th>Ebuildファイル(必須)</th><ti>アップロードしたいebuildをここで選択します。</ti>
</tr>
<tr>
<th>Ebuildコメント(任意)</th><ti>ebuildの簡単な説明をここに記述して下さい。</ti>
</tr>
<tr>
<th>追加ファイル(任意)</th><ti>パッチなどがあってfilesディレクトリに置いておかなければ正常動作しないようなebuildの場合はここでfilesディレクトリに置くファイルを選んで下さい。
特に必要なければ空欄で構いません。
また、コメント欄にはそのファイルについての説明を簡潔に記述して下さい。
</ti>
</tr>
</table>

<p>
これらの項目に適切な記述をして、<i>送信</i>ボタンをクリックするだけで新規登録作業は完了です。
</p>
<impo>digestやManifest等のファイルはアップロードしないようにして下さい。</impo>
</body>
</section>

<section>
<title>ebuildファイルを追加登録する</title>
<body>
<p>
すでに登録されているパッケージに、ebuildや他のファイルを追加でアップロードしたい場合は以下のようにします。
</p>
<ol>
<li>左側の一覧や運営ログなどから、これから何か追加したいアプリケーションを選びます。</li>
<li>ebuildsのテーブルの下にある<i>ebuildの追加</i>をクリックします。</li>
<li><uri link="#doc_chap2_sect2">新規登録</uri>
と同じ画面になりますので、あとは同じ手順でアップロードを行って下さい。</li>
</ol>
<note>
既にアップロードされているファイルと同一の名前を持つファイルはアップロードできませんので、
そのような場合は-r1といったリビジョンを付けるなどしてからアップロードを行って下さい。
</note>
</body>
</section>

<section>
<title>filesディレクトリに入るべきファイルを追加登録する</title>
<body>
<p>
すでに登録されているパッケージに、filesディレクトリに入るべきファイルを追加でアップロードしたい場合は以下のようにします。
</p>
<ol>
<li>左側の一覧や運営ログなどから、これから何か追加したいアプリケーションを選びます。</li>
<li>Filesのテーブルの下にある<i>filesの追加</i>をクリックします。</li>
<li><uri link="#doc_chap2_sect2">新規登録</uri>
の画面から「カテゴリー」「Ebuildファイル」「Ebuildコメント」を除いたフォームが現れますので、
必要事項を入力して同じようにアップロードを行って下さい。</li>
</ol>
<note>
ebuildの追加登録と同じく、既にアップロードされているファイルと同一の名前を持つファイルはアップロードできません。
</note>
</body>
</section>
</chapter>

<chapter>
<title>ツリーを同期する</title>
<section>
<title>3種類の同期方法</title>
<body>
<p>
ebuild-uploaderに登録してあるebuildをローカルに同期する方法は3種類あります。
それぞれの方法には一長一短がありますが、環境に合わせて適切な方法を選んで下さい。
</p>
</body>
</section>

<section>
<title>laymanを利用する</title>
<body>
<p>
この方法がおそらく一番簡単な方法です。
特殊な理由がない限りはこの方法を選ぶと良いでしょう。
</p>

<p>
laymanを利用してebuild-uploaderに登録されているebuildを試すのはとても簡単です。
laymanをインストールし、"gentoojp"というオーバーレイをあなたの利用するオーバーレイのリストに加えるだけです。
</p>

<pre>
# emerge layman
# echo "source /usr/portage/local/layman/make.conf" >> /etc/make.conf
<codenote>laymanの設定をmake.confに読み込ませます。</codenote>
# layman -f
<codenote>laymanで利用可能なオーバーレイのリストを更新します。</codenote>
# layman -a gentoojp
<codenote>"gentoojp"をあなたの利用するオーバーレイのリストに追加します。</codenote>
</pre>

<p>
laymanを利用する場合の設定は以上です。
ツリーの状態を更新するには、以下のコマンドを打って下さい。
</p>

<pre>
# layman -s gentoojp
</pre>

<note>
laymanのより高度の使い方については、manページをご覧下さい。
</note>

<note>
08/27/2006現在、laymanはソフトマスク状態にあります。
この方法を利用する際は、laymanのソフトマスクを明示的に外す必要があります。
ソフトマスクの外し方については、Gentooハンドブックの
<uri link="http://www.gentoo.org/doc/ja/handbook/handbook-x86.xml?part=3&amp;chap=3">ソフトウェアのブランチを併用する</uri>
をご参照下さい。
</note>
</body>
</section>

<section>
<title>gensyncを利用する</title>
<body>
<p>
この方法は、laymanを利用する場合は自動的に設定されるいくつかのことを自分で設定しなければならないため少々煩雑です。
ただし08/27/2006現在Stableブランチでも利用可能なため、Testingブランチを利用したくないユーザには適切です。
</p>

<p>
まず、ebuild-uploaderに登録されているebuild群を、ローカルのどのディレクトリに展開するのかを決定しなければなりません。
ここでは、<i><path>/usr/local/portagejp</path></i>に展開するものとして話を進めます。
よく分からない場合はこの例の通りに設定すると良いでしょう。
</p>

<p>
<path>/etc/make.conf</path>の<i>PORTDIR_OVERLAY_JP</i>という変数に展開先を記述します。
</p>

<pre>
PORTDIR_OVERLAY_JP="/usr/local/portagejp"
</pre>

<p>
また、このディレクトリをPORTDIR_OVERLAYに加えて、
Portageがこのツリーを参照してくれるようにしなければなりません。
</p>

<pre>
PORTDIR_OVERLAY="/usr/local/portagejp /some/portdir/overlay"
<codenote><path>/some/portdir/overlay</path>というのは、他にもディレクトリを設定できるという意味です。</codenote>
<codenote>これをそのまま書かないようにして下さい。</codenote>
</pre>
<p>
これで展開先は決定できました。
</p>
<note>
PORTDIR_OVERLAYをご存じでない方は、
<uri link="http://www.gentoo.org/doc/ja/portage-user.xml">Portageユーザガイド</uri>
をご一読下さい。
</note>
<impo>
PORTDIR_OVERLAYにディレクトリを追加する際、
PORTDIR_OVERLAY_JPに記述されるディレクトリを必ず最初に記述するようにして下さい。
</impo>

<p>展開先が決定されたので、gensyncを利用するため、gentoolkit-devパッケージをインストールします。</p>
<pre>
# emerge gentoolkit-dev
</pre>

<p>
gentoolkit-devのインストールが終わったら、gensyncの設定を行います。
gensyncは<path>/etc/gensync</path>以下に*.syncsourceというファイルを作成して利用することができます。
ここでは、<i><path>/etc/gensync/ebuildjp.syncsource</path></i>というファイルを作成するものとして話を進めます。
</p>
<p>
<path>/etc/gensync/ebuildjp.syncsource</path>を作成し、内容を以下のようにして下さい。
</p>

<pre>
id="ebuildjp"
description="GentooJP ebuild project source"
rsync="rsync://ebuild.gentoo.gr.jp/gentoojp-portage"

overlay="/usr/local/portagejp"
<codenote>先程<path>/etc/make.conf</path>のPORTDIR_OVERLAY_JPで設定した展開先を記述して下さい。</codenote>
</pre>

<p>これで設定は完了です。gensyncを実行してツリーの取得を行いましょう。</p>

<pre>
# gensync ebuildjp
</pre>

<p>ツリーはこのコマンドをタイプすればいつでも更新することができます。</p>

<note>gensyncの高度な使い方については、manページをご覧下さい。</note>
</body>
</section>

<section>
<title>tarボールを利用する</title>
<body>
<p>
ファイアウォール等の制限によりrsyncポートを使えない利用者の方向けに、
Webを利用したツリーの取得／更新方法も提供しています。
Webを利用してツリーを取得するには、
<uri link="#doc_chap3_sect3">gensyncを利用する</uri>
で説明したebuild展開先の設定を行った後で以下のようにします。
</p>

<pre>
# cd /tmp
<codenote>これは一時ダウンロードディレクトリです。どこでも構いません。</codenote>

# wget http://ebuild.gentoo.gr.jp/distfiles/portagejp.tbz2
# cd /usr/local
# tar jxf /tmp/portagejp.tbz2
<codenote>アーカイブを展開するとportagejpというディレクトリが生成されます。</codenote>
<codenote>PORTDIR_OVERLAY_JPを別のディレクトリにしていた場合は適宜調整して下さい。</codenote>
</pre>

<p>
これで利用可能な状態になります。Webを利用してツリーの更新を行うときに必要なのは、
portagejpというパッケージをemergeすることだけです。
</p>

<pre>
# emerge portagejp
</pre>

</body>
</section>
</chapter>

<chapter>
<title>ebuildを利用するための設定</title>
<section>
<title>digestの自動生成</title>
<body>
<p>
ebuild-uploaderには基本的にdigestファイルは添付されません。
そのため、digestファイルは自分で生成してやらなければならないことになります。
しかしPortageには、emerge時にdigestファイルを自動で生成するための機能があります。
</p>

<p>
その機能を有効にするために、<path>/etc/make.conf</path>のFEATURES変数に、以下の記述を加えて下さい。
</p>

<pre>
FEATURES="digest"
</pre>

<warn>
これはdigestを自分で生成しなければならないということですが、
それはアーカイブの正当性について自分で責任を持つという意味を持ちます。
</warn>
</body>
</section>
</chapter>

<chapter>
<title>ebuildをテストする</title>
<section>
<body>
<p>
ebuildをテストするのはとても簡単です。1度設定とツリーの展開を行った環境であれば、
</p>
<pre>
# emerge hogehoge
</pre>
<p>
とするだけでテストすることができます。
この際、コンパイルが通らなかったりアプリケーションが正常に動作しなかった場合など、
不具合が発生したらebuild-uploaderの掲示板で報告を行って下さい。
もちろん、正常な動作報告もお待ちしています。
</p>
<note>
過去にアップロードされたebuildの名前が本家Portageツリーのアップデートによって重なり、
結果として依存関係の不整合を引き起こすことがあります。
もしebuildJPと本家Portageツリーの不整合による不具合を発見したら、
<uri link="#doc_chap6">動作／不具合報告をする</uri>
の手順に従って不具合の報告を行って下さい。
</note>
<warn>
ebuild-uploaderでは誰でもが簡単にebuildを登録できるため、
システムを破壊させるようなebuildが登録されているかも知れないという可能性が常にあります。
そのような危険をはらんでいるということを考慮して、テストは慎重に行って下さい。
</warn>
</body>
</section>
</chapter>

<chapter>
<title>動作／不具合報告をする</title>
<section>
<body>
<p>
何らかの不具合を見つけたり、正常に動作したということを報告したい場合は、
まず
<uri link="http://ebuild.gentoo.gr.jp/">ebuild-uploader</uri>
にアクセスし、報告を行いたいアプリケーションのページへ行って下さい。
下の方に<i>コメント</i>というセクションがありますので、
自分の名前とメッセージを書いて<i>メッセージ送信</i>をクリックして下さい。
</p>

<p>
また、投票機能を使うことで、動作したということを簡単に報告することができます。
</p>

<note>
バグ報告はできるだけ的確に、簡潔に書いて下さい。内容が分かりにくいと修正が遅れる可能性があります。
</note>
</body>
</section>

</chapter>

</guide>
